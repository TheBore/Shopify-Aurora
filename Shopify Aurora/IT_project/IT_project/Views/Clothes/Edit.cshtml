@model IT_project.Models.Clothes

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Clothes</h4>
    <hr />

    <div class="row">
        <div class=" сol-12 col-md-6 col-lg-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AvailablePieces, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox" style="margin-left: 40px">
                        @Html.EditorFor(model => model.AvailablePieces)
                        @Html.ValidationMessageFor(model => model.AvailablePieces, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class=" сol-12 col-md-6 col-lg-6">
            <div>
                @Html.Label("Colors", new { @class = "control-label" })
            </div>

            <div class="add-more">
                <div id="colorsList">
                    @foreach (var color in Model.Colors)
                    {
                        <input type="color" name="colors" value=@color.Color>
                    }
                </div>
                <button id="more" name="more" type="button">+</button>
                <button id="less" name="less" type="button">-</button>
            </div>

            <div>
                @Html.Label("Sizes", new { @class = "control-label" })
            </div>

            <div>
                <select id="sizes" name="sizes" multiple>
                    @foreach (var size in ViewBag.Sizes)
                    {
                        <option value=@size.Text @(ViewBag.SelectedSizes.Contains(size.Text) ? "selected" : "")>@size.Text</option>
                    }
                </select>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
        </div>
    </div>
    }
        

        <div>
            @Html.ActionLink("Back", "ItemsForShop")
        </div>

        @section Scripts {
            <script src="~/Scripts/App Scripts/add-clothes.js"></script>
            @Scripts.Render("~/bundles/jqueryval")
        }
